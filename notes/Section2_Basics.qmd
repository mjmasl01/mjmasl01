---
title: "Section 2: Basics"
author: "Matthew Maslow"
format: 
  html:
    embed-resources: true
---


*7 parameters in a grammar of graphics:*
<DATA>: the data set
<MAPPINGS>: an aesthetic mapping
<GEOM_FUNCTION>: a geometrical object
<STAT>: a statistical transformation
<POSITION>: a position adjustment
<FACET_FUNCTION>: subplots
<COORDINATE_FUNCTION>: a coordinate system

```{r}
## install.packages("palmerpenguins")
library(palmerpenguins)
library(tidyverse)
theme_set(theme_minimal())
penguins
#> # A tibble: 344 × 8
#>   species island   bill_length_mm bill_depth_mm flipper_length_mm body_mass_g
#>   <fct>   <fct>             <dbl>         <dbl>             <int>       <int>
#> 1 Adelie  Torgers…           39.1          18.7               181        3750
#> 2 Adelie  Torgers…           39.5          17.4               186        3800
#> 3 Adelie  Torgers…           40.3          18                 195        3250
#> 4 Adelie  Torgers…           NA            NA                  NA          NA
#> 5 Adelie  Torgers…           36.7          19.3               193        3450
#> 6 Adelie  Torgers…           39.3          20.6               190        3650
#> # ℹ 338 more rows
#> # ℹ 2 more variables: sex <fct>, year <int>
```

```{r}
## single quantitative frequency plot
ggplot(data = penguins, aes(x = bill_length_mm)) +
  geom_freqpoly() 
```

```{r}
## single categorical variable
ggplot(data = penguins, aes(x = species)) +
  geom_bar(colour = "mediumpurple4", fill = "mediumpurple1")
```

```{r}
## two quantitative variables
ggplot(data = penguins, aes(x = bill_length_mm, y = bill_depth_mm)) +
  geom_point() +
  geom_smooth()
```

```{r}
## two categorical variables
ggplot(data = penguins, aes(x = species, y = island)) +
  geom_bin_2d()
```

```{r}
ggplot(data = penguins, aes(x = bill_length_mm)) +
  geom_histogram(colour = "black", fill = "white", bins = 15) +
  facet_wrap(~ species)
```
```{r}
ggplot(data = penguins, aes(x = bill_length_mm, y = bill_depth_mm)) +
  geom_point() +
  geom_smooth() +
  facet_wrap(~ species)
```
```{r}
ggplot(data = penguins, aes(x = species)) +
  geom_bar(stat = "count") ## don't need stat = "count" because it's the default.
```


```{r}
penguins_sum <- 
  penguins %>%
  group_by(species) %>%
  summmarise(n_count =n())
ggplot(data = penguins_sum, aes(x = species, 
                                y = n_count)) +
  geom_bar(stat = "identity")
## equivalent to using geom_col
```


```{r}
ggplot(data = penguins, aes(x = species, fill = sex)) +
  geom_bar(position = "stack") + ## don't need "stack" because it's default
  scale_fill_viridis_d()
```

```{r}
ggplot(data = penguins, aes(x = species, fill = sex)) +
  geom_bar(position = "dodge") + 
  scale_fill_viridis_d()
```


```{r}
# fixing previous plot
penguins_nomiss <-
  penguins %>%
  na.omit() # can also use filter(!is.na(sex))
ggplot(data = penguins_nomiss, aes(x = species, fill = sex)) +
  geom_bar(position = "dodge") + 
  scale_fill_viridis_d()
```

```{r}
ggplot(data = penguins, aes(x = species)) +
  geom_bar() +
  coord_polar()
```

```{r}

```


# excercises

*Exercise 1. Make another plot of bill_length_mm with a different geom that is used for a single quantitative variable.*

```{r}
ggplot(data = penguins, aes(x = bill_length_mm, 
                            y = bill_depth_mm)) +
  geom_point(stat = "identity",
             position = "identity") + 
  facet_null() +
  coord_cartesian()
```

*Exercise 2. Create a plot of a quantitative and a categorical variable in the penguins data set.*

```{r}
ggplot(data = penguins, aes(x = bill_length_mm, 
                            y = species)) +
  geom_boxplot() +
  facet_wrap(~ island)
```


*Exercise 3. Modify the frequency plot made with geom_freqpoly() to use colour in two different ways: change the colour of the line to any colour that R knows. A list of some colours can be found at this link. add a colour aesthetic to make three different frequency lines, one for each species of penguin.*

```{r}

```


*Exercise 4. Recall that aes() aesthetics specified within the ggplot() function directly are called global aesthetics because every other <GEOM> will use them (unless specifically overridden) while aes() specified within a particular <GEOM> are called local aesthetics because only that particular <GEOM> will use them.Modify the scatterplot and smoother so that*
**the points are coloured by species, but there is only one smoother instead of three.*
```{r}

```


**there are three different colored smoothers (one for each species) but the points are all the same color.**
```{r}

```


*Exercise 5. Construct another graph that explicitly uses all 7 grammar of graphics parameters (you may set some of these parameters to be the default values, but you should do so explicitly).*

```{r}

```


*Exercise 6. Create two different graphs that differ only by 1 of the 7 grammar of graphics parameters. Then, show your two graphs (but not your code) to a partner and see if they can identify which graphics parameter has been modified.*

```{r}
penguins %>%
  ggplot(aes(x = bill_length_mm, y = bill_depth_mm)) +
  geom_point() +
  geom_smooth() +
  facet_wrap(~ species)
```
```{r}
penguins %>%
  ggplot(aes(x = bill_length_mm, y = bill_depth_mm)) +
  geom_point() +
  geom_smooth() +
  facet_wrap(~ species) +
  coord_flip()
```

```{r}

```












